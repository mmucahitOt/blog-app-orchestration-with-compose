name: blog-app-all-prod

services:
  frontend:
    container_name: blog-app-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5173:5173
    env_file:
      - .env

  backend:
    image: blog-app-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    env_file:
      - .env
    container_name: blog-app-backend
    depends_on:
      - mongo

  mongo:
    container_name: blog-app-mongo
    image: mongo
    ports:
      - "${MONGO_PORT:-3456}:27017"
    volumes:
      - ./backend/mongo_data:/data/db
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-root1234}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-blog-app-app}

  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: blog-app-reverse-proxy-prod
    depends_on:
      - frontend
      - backend

volumes:
  mongo_data:
